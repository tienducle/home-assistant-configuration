# WOL
# these are actually 3 switches
# 1. wake_on_lan switch for turning the computer on
# 2. command_line switch for turning the computer off
# 3. the actual switch that is shown in the UI
#    - checks wake_on_lan switch to determine whether the computer is on
#    - on: triggers wake_on_lan switch
#    - off: triggers command_line switch

- platform: wake_on_lan
  mac: !secret computer_tle_mac_address
  name: wol_computer_tle
  host: !secret computer_tle_host

- platform: command_line
  switches:
    shutdown_computer_tle:
      command_off: !secret computer_tle_shutdown_cmd

- platform: template
  switches:
    ducs_computer:
      friendly_name: 'Ducs Computer'
      value_template: '{{ is_state("switch.wol_computer_tle", "on") }}'
      turn_on:
        service: switch.turn_on
        entity_id: switch.wol_computer_tle
      turn_off:
        service: switch.turn_off
        entity_id: switch.shutdown_computer_tle

- platform: wake_on_lan
  mac: !secret computer_msp_mac_address
  name: "wol_computer_msp"
  host: !secret computer_msp_host

- platform: command_line
  switches:
    shutdown_computer_msp:
      command_off: !secret computer_msp_shutdown_cmd

- platform: template
  switches:
    melinas_computer:
      friendly_name: 'Melinas Computer'
      value_template: '{{ is_state("switch.wol_computer_msp", "on") }}'
      turn_on:
        service: switch.turn_on
        entity_id: switch.wol_computer_msp
      turn_off:
        service: switch.turn_off
        entity_id: switch.shutdown_computer_msp

# MacMini
- platform: wake_on_lan
  mac: !secret macmini_mac_address
  name: wol_macmini
  host: !secret macmini_host

- platform: template
  switches:
    macmini:
      friendly_name: 'Mac Mini'
      value_template: '{{ is_state("switch.wol_macmini", "on") }}'
      turn_on:
        service: switch.turn_on
        entity_id: switch.wol_macmini
      turn_off:
        service: switch.turn_on
        entity_id: switch.wol_macmini
